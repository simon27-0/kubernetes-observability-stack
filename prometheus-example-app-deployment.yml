apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: prometheus-example-app
  name: prometheus-example-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus-example-app
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus-example-app      
      annotations:
        prometheus.io/scrape: "enable"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: prometheus-example-app
        image: quay.io/brancz/prometheus-example-app:v0.3.0
        ports:
        - name: web
          containerPort: 8080

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: prometheus-example-svc
#   labels:
#     app.kubernetes.io/name: prometheus-example-app
#   annotations:
#     blackbox.io/probe: "true"
# spec:
#   selector:
#     app.kubernetes.io/name: prometheus-example-app
#   ports:
#     - port: 8080
#       targetPort: 8080
#       protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-example-svc
  namespace: devops
  labels:
    app.kubernetes.io/name: prometheus-example-app
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: prometheus-example-app


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    blackbox.io/probe: "enable"
    kubernetes.io/ingress.class: nginx-internal 
  name: prometheus-example-ingress
  namespace: devops-sandbox
spec:
  rules:
  - host: prometheus-example.dev.amartha.id
    http:
      paths:
      - backend:
          service:
            name: prometheus-example-svc
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - prometheus-example.dev.amartha.id
    secretName: prometheus-example-amartha-id-tls   