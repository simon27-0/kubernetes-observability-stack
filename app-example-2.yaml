apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: app-example-2
  name: app-example-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app-example-2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-example-2      
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: app-example-2
        image: quay.io/brancz/prometheus-example-app:v0.3.0
        ports:
        - name: web
          containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: app-example-2-svc
  labels:
    app.kubernetes.io/name: app-example-2
  annotations:
    blackbox.io/probe: "true"
spec:
  selector:
    app.kubernetes.io/name: app-example-2
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    blackbox.io/probe: "enable"
    kubernetes.io/ingress.class: nginx-internal 
  name: app-example-2-ingress
  namespace: devops-sandbox
spec:
  rules:
  - host: app-example-2.dev.amartha.id
    http:
      paths:
      - backend:
          service:
            name: app-example-2-svc
            port:
              number: 8080
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - app-example-2.dev.amartha.id
    secretName: app-example-2-amartha-id-tls         